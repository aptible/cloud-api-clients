/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// HealthCheckFromWorker struct for HealthCheckFromWorker
type HealthCheckFromWorker struct {
	EnvironmentId string `json:"environment_id"`
	MessageId *string `json:"message_id,omitempty"`
	ExecutionId string `json:"execution_id"`
	Message string `json:"message"`
}

// NewHealthCheckFromWorker instantiates a new HealthCheckFromWorker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheckFromWorker(environmentId string, executionId string, message string) *HealthCheckFromWorker {
	this := HealthCheckFromWorker{}
	this.EnvironmentId = environmentId
	this.ExecutionId = executionId
	this.Message = message
	return &this
}

// NewHealthCheckFromWorkerWithDefaults instantiates a new HealthCheckFromWorker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckFromWorkerWithDefaults() *HealthCheckFromWorker {
	this := HealthCheckFromWorker{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *HealthCheckFromWorker) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *HealthCheckFromWorker) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *HealthCheckFromWorker) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *HealthCheckFromWorker) GetMessageId() string {
	if o == nil || o.MessageId == nil {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckFromWorker) GetMessageIdOk() (*string, bool) {
	if o == nil || o.MessageId == nil {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *HealthCheckFromWorker) HasMessageId() bool {
	if o != nil && o.MessageId != nil {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *HealthCheckFromWorker) SetMessageId(v string) {
	o.MessageId = &v
}

// GetExecutionId returns the ExecutionId field value
func (o *HealthCheckFromWorker) GetExecutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value
// and a boolean to check if the value has been set.
func (o *HealthCheckFromWorker) GetExecutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionId, true
}

// SetExecutionId sets field value
func (o *HealthCheckFromWorker) SetExecutionId(v string) {
	o.ExecutionId = v
}

// GetMessage returns the Message field value
func (o *HealthCheckFromWorker) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *HealthCheckFromWorker) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *HealthCheckFromWorker) SetMessage(v string) {
	o.Message = v
}

func (o HealthCheckFromWorker) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if o.MessageId != nil {
		toSerialize["message_id"] = o.MessageId
	}
	if true {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableHealthCheckFromWorker struct {
	value *HealthCheckFromWorker
	isSet bool
}

func (v NullableHealthCheckFromWorker) Get() *HealthCheckFromWorker {
	return v.value
}

func (v *NullableHealthCheckFromWorker) Set(val *HealthCheckFromWorker) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheckFromWorker) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheckFromWorker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheckFromWorker(val *HealthCheckFromWorker) *NullableHealthCheckFromWorker {
	return &NullableHealthCheckFromWorker{value: val, isSet: true}
}

func (v NullableHealthCheckFromWorker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheckFromWorker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


