/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// ConnectionOutput struct for ConnectionOutput
type ConnectionOutput struct {
	Id string `json:"id"`
	IncomingConnectionAsset *AssetOutput `json:"incoming_connection_asset,omitempty"`
	Operations []OperationOutput `json:"operations,omitempty"`
	OutgoingConnectionAsset *AssetOutput `json:"outgoing_connection_asset,omitempty"`
	Status ConnectionStatus `json:"status"`
}

// NewConnectionOutput instantiates a new ConnectionOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOutput(id string, status ConnectionStatus) *ConnectionOutput {
	this := ConnectionOutput{}
	this.Id = id
	this.Status = status
	return &this
}

// NewConnectionOutputWithDefaults instantiates a new ConnectionOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOutputWithDefaults() *ConnectionOutput {
	this := ConnectionOutput{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectionOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectionOutput) SetId(v string) {
	o.Id = v
}

// GetIncomingConnectionAsset returns the IncomingConnectionAsset field value if set, zero value otherwise.
func (o *ConnectionOutput) GetIncomingConnectionAsset() AssetOutput {
	if o == nil || o.IncomingConnectionAsset == nil {
		var ret AssetOutput
		return ret
	}
	return *o.IncomingConnectionAsset
}

// GetIncomingConnectionAssetOk returns a tuple with the IncomingConnectionAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetIncomingConnectionAssetOk() (*AssetOutput, bool) {
	if o == nil || o.IncomingConnectionAsset == nil {
		return nil, false
	}
	return o.IncomingConnectionAsset, true
}

// HasIncomingConnectionAsset returns a boolean if a field has been set.
func (o *ConnectionOutput) HasIncomingConnectionAsset() bool {
	if o != nil && o.IncomingConnectionAsset != nil {
		return true
	}

	return false
}

// SetIncomingConnectionAsset gets a reference to the given AssetOutput and assigns it to the IncomingConnectionAsset field.
func (o *ConnectionOutput) SetIncomingConnectionAsset(v AssetOutput) {
	o.IncomingConnectionAsset = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *ConnectionOutput) GetOperations() []OperationOutput {
	if o == nil || o.Operations == nil {
		var ret []OperationOutput
		return ret
	}
	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetOperationsOk() ([]OperationOutput, bool) {
	if o == nil || o.Operations == nil {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *ConnectionOutput) HasOperations() bool {
	if o != nil && o.Operations != nil {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []OperationOutput and assigns it to the Operations field.
func (o *ConnectionOutput) SetOperations(v []OperationOutput) {
	o.Operations = v
}

// GetOutgoingConnectionAsset returns the OutgoingConnectionAsset field value if set, zero value otherwise.
func (o *ConnectionOutput) GetOutgoingConnectionAsset() AssetOutput {
	if o == nil || o.OutgoingConnectionAsset == nil {
		var ret AssetOutput
		return ret
	}
	return *o.OutgoingConnectionAsset
}

// GetOutgoingConnectionAssetOk returns a tuple with the OutgoingConnectionAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetOutgoingConnectionAssetOk() (*AssetOutput, bool) {
	if o == nil || o.OutgoingConnectionAsset == nil {
		return nil, false
	}
	return o.OutgoingConnectionAsset, true
}

// HasOutgoingConnectionAsset returns a boolean if a field has been set.
func (o *ConnectionOutput) HasOutgoingConnectionAsset() bool {
	if o != nil && o.OutgoingConnectionAsset != nil {
		return true
	}

	return false
}

// SetOutgoingConnectionAsset gets a reference to the given AssetOutput and assigns it to the OutgoingConnectionAsset field.
func (o *ConnectionOutput) SetOutgoingConnectionAsset(v AssetOutput) {
	o.OutgoingConnectionAsset = &v
}

// GetStatus returns the Status field value
func (o *ConnectionOutput) GetStatus() ConnectionStatus {
	if o == nil {
		var ret ConnectionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetStatusOk() (*ConnectionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConnectionOutput) SetStatus(v ConnectionStatus) {
	o.Status = v
}

func (o ConnectionOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.IncomingConnectionAsset != nil {
		toSerialize["incoming_connection_asset"] = o.IncomingConnectionAsset
	}
	if o.Operations != nil {
		toSerialize["operations"] = o.Operations
	}
	if o.OutgoingConnectionAsset != nil {
		toSerialize["outgoing_connection_asset"] = o.OutgoingConnectionAsset
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOutput struct {
	value *ConnectionOutput
	isSet bool
}

func (v NullableConnectionOutput) Get() *ConnectionOutput {
	return v.value
}

func (v *NullableConnectionOutput) Set(val *ConnectionOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOutput(val *ConnectionOutput) *NullableConnectionOutput {
	return &NullableConnectionOutput{value: val, isSet: true}
}

func (v NullableConnectionOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


