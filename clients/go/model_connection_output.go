/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// ConnectionOutput struct for ConnectionOutput
type ConnectionOutput struct {
	Id string `json:"id"`
	IncomingAsset AssetOutput `json:"incoming_asset"`
	OutgoingAsset AssetOutput `json:"outgoing_asset"`
	Status ConnectionStatus `json:"status"`
}

// NewConnectionOutput instantiates a new ConnectionOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOutput(id string, incomingAsset AssetOutput, outgoingAsset AssetOutput, status ConnectionStatus) *ConnectionOutput {
	this := ConnectionOutput{}
	this.Id = id
	this.IncomingAsset = incomingAsset
	this.OutgoingAsset = outgoingAsset
	this.Status = status
	return &this
}

// NewConnectionOutputWithDefaults instantiates a new ConnectionOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOutputWithDefaults() *ConnectionOutput {
	this := ConnectionOutput{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectionOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectionOutput) SetId(v string) {
	o.Id = v
}

// GetIncomingAsset returns the IncomingAsset field value
func (o *ConnectionOutput) GetIncomingAsset() AssetOutput {
	if o == nil {
		var ret AssetOutput
		return ret
	}

	return o.IncomingAsset
}

// GetIncomingAssetOk returns a tuple with the IncomingAsset field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetIncomingAssetOk() (*AssetOutput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomingAsset, true
}

// SetIncomingAsset sets field value
func (o *ConnectionOutput) SetIncomingAsset(v AssetOutput) {
	o.IncomingAsset = v
}

// GetOutgoingAsset returns the OutgoingAsset field value
func (o *ConnectionOutput) GetOutgoingAsset() AssetOutput {
	if o == nil {
		var ret AssetOutput
		return ret
	}

	return o.OutgoingAsset
}

// GetOutgoingAssetOk returns a tuple with the OutgoingAsset field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetOutgoingAssetOk() (*AssetOutput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutgoingAsset, true
}

// SetOutgoingAsset sets field value
func (o *ConnectionOutput) SetOutgoingAsset(v AssetOutput) {
	o.OutgoingAsset = v
}

// GetStatus returns the Status field value
func (o *ConnectionOutput) GetStatus() ConnectionStatus {
	if o == nil {
		var ret ConnectionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConnectionOutput) GetStatusOk() (*ConnectionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConnectionOutput) SetStatus(v ConnectionStatus) {
	o.Status = v
}

func (o ConnectionOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["incoming_asset"] = o.IncomingAsset
	}
	if true {
		toSerialize["outgoing_asset"] = o.OutgoingAsset
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOutput struct {
	value *ConnectionOutput
	isSet bool
}

func (v NullableConnectionOutput) Get() *ConnectionOutput {
	return v.value
}

func (v *NullableConnectionOutput) Set(val *ConnectionOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOutput(val *ConnectionOutput) *NullableConnectionOutput {
	return &NullableConnectionOutput{value: val, isSet: true}
}

func (v NullableConnectionOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


