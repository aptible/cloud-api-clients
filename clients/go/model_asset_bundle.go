/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// AssetBundle struct for AssetBundle
type AssetBundle struct {
	Identifier string `json:"identifier"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Types []string `json:"types"`
	Actions map[string]AssetAction `json:"actions"`
	UserParameters interface{} `json:"user_parameters,omitempty"`
}

// NewAssetBundle instantiates a new AssetBundle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetBundle(identifier string, name string, types []string, actions map[string]AssetAction) *AssetBundle {
	this := AssetBundle{}
	this.Identifier = identifier
	this.Name = name
	this.Types = types
	this.Actions = actions
	return &this
}

// NewAssetBundleWithDefaults instantiates a new AssetBundle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetBundleWithDefaults() *AssetBundle {
	this := AssetBundle{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *AssetBundle) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *AssetBundle) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *AssetBundle) SetIdentifier(v string) {
	o.Identifier = v
}

// GetName returns the Name field value
func (o *AssetBundle) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AssetBundle) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AssetBundle) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AssetBundle) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetBundle) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AssetBundle) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AssetBundle) SetDescription(v string) {
	o.Description = &v
}

// GetTypes returns the Types field value
func (o *AssetBundle) GetTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *AssetBundle) GetTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *AssetBundle) SetTypes(v []string) {
	o.Types = v
}

// GetActions returns the Actions field value
func (o *AssetBundle) GetActions() map[string]AssetAction {
	if o == nil {
		var ret map[string]AssetAction
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *AssetBundle) GetActionsOk() (*map[string]AssetAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actions, true
}

// SetActions sets field value
func (o *AssetBundle) SetActions(v map[string]AssetAction) {
	o.Actions = v
}

// GetUserParameters returns the UserParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetBundle) GetUserParameters() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UserParameters
}

// GetUserParametersOk returns a tuple with the UserParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetBundle) GetUserParametersOk() (*interface{}, bool) {
	if o == nil || o.UserParameters == nil {
		return nil, false
	}
	return &o.UserParameters, true
}

// HasUserParameters returns a boolean if a field has been set.
func (o *AssetBundle) HasUserParameters() bool {
	if o != nil && o.UserParameters != nil {
		return true
	}

	return false
}

// SetUserParameters gets a reference to the given interface{} and assigns it to the UserParameters field.
func (o *AssetBundle) SetUserParameters(v interface{}) {
	o.UserParameters = v
}

func (o AssetBundle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["types"] = o.Types
	}
	if true {
		toSerialize["actions"] = o.Actions
	}
	if o.UserParameters != nil {
		toSerialize["user_parameters"] = o.UserParameters
	}
	return json.Marshal(toSerialize)
}

type NullableAssetBundle struct {
	value *AssetBundle
	isSet bool
}

func (v NullableAssetBundle) Get() *AssetBundle {
	return v.value
}

func (v *NullableAssetBundle) Set(val *AssetBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetBundle(val *AssetBundle) *NullableAssetBundle {
	return &NullableAssetBundle{value: val, isSet: true}
}

func (v NullableAssetBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


