/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// AssetTerraformOutput struct for AssetTerraformOutput
type AssetTerraformOutput struct {
	Name string `json:"name"`
	Sensitive bool `json:"sensitive"`
	Structure interface{} `json:"structure,omitempty"`
	Data interface{} `json:"data,omitempty"`
}

// NewAssetTerraformOutput instantiates a new AssetTerraformOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetTerraformOutput(name string, sensitive bool) *AssetTerraformOutput {
	this := AssetTerraformOutput{}
	this.Name = name
	this.Sensitive = sensitive
	return &this
}

// NewAssetTerraformOutputWithDefaults instantiates a new AssetTerraformOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetTerraformOutputWithDefaults() *AssetTerraformOutput {
	this := AssetTerraformOutput{}
	return &this
}

// GetName returns the Name field value
func (o *AssetTerraformOutput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AssetTerraformOutput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AssetTerraformOutput) SetName(v string) {
	o.Name = v
}

// GetSensitive returns the Sensitive field value
func (o *AssetTerraformOutput) GetSensitive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Sensitive
}

// GetSensitiveOk returns a tuple with the Sensitive field value
// and a boolean to check if the value has been set.
func (o *AssetTerraformOutput) GetSensitiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sensitive, true
}

// SetSensitive sets field value
func (o *AssetTerraformOutput) SetSensitive(v bool) {
	o.Sensitive = v
}

// GetStructure returns the Structure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetTerraformOutput) GetStructure() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Structure
}

// GetStructureOk returns a tuple with the Structure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTerraformOutput) GetStructureOk() (*interface{}, bool) {
	if o == nil || o.Structure == nil {
		return nil, false
	}
	return &o.Structure, true
}

// HasStructure returns a boolean if a field has been set.
func (o *AssetTerraformOutput) HasStructure() bool {
	if o != nil && o.Structure != nil {
		return true
	}

	return false
}

// SetStructure gets a reference to the given interface{} and assigns it to the Structure field.
func (o *AssetTerraformOutput) SetStructure(v interface{}) {
	o.Structure = v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetTerraformOutput) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTerraformOutput) GetDataOk() (*interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return &o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AssetTerraformOutput) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given interface{} and assigns it to the Data field.
func (o *AssetTerraformOutput) SetData(v interface{}) {
	o.Data = v
}

func (o AssetTerraformOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["sensitive"] = o.Sensitive
	}
	if o.Structure != nil {
		toSerialize["structure"] = o.Structure
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableAssetTerraformOutput struct {
	value *AssetTerraformOutput
	isSet bool
}

func (v NullableAssetTerraformOutput) Get() *AssetTerraformOutput {
	return v.value
}

func (v *NullableAssetTerraformOutput) Set(val *AssetTerraformOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetTerraformOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetTerraformOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetTerraformOutput(val *AssetTerraformOutput) *NullableAssetTerraformOutput {
	return &NullableAssetTerraformOutput{value: val, isSet: true}
}

func (v NullableAssetTerraformOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetTerraformOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


