/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// OperationOutput struct for OperationOutput
type OperationOutput struct {
	EnvironmentId string `json:"environment_id"`
	UserId string `json:"user_id"`
	OrganizationId string `json:"organization_id"`
	OperationType NullableOperationType `json:"operation_type,omitempty"`
	Status NullableOperationStatus `json:"status,omitempty"`
	AssetName string `json:"asset_name"`
	AssetId string `json:"asset_id"`
	AssetVersion string `json:"asset_version"`
	AssetParameters map[string]interface{} `json:"asset_parameters,omitempty"`
	Id string `json:"id"`
	ExecutionId *string `json:"execution_id,omitempty"`
}

// NewOperationOutput instantiates a new OperationOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationOutput(environmentId string, userId string, organizationId string, assetName string, assetId string, assetVersion string, id string) *OperationOutput {
	this := OperationOutput{}
	this.EnvironmentId = environmentId
	this.UserId = userId
	this.OrganizationId = organizationId
	this.AssetName = assetName
	this.AssetId = assetId
	this.AssetVersion = assetVersion
	this.Id = id
	return &this
}

// NewOperationOutputWithDefaults instantiates a new OperationOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationOutputWithDefaults() *OperationOutput {
	this := OperationOutput{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *OperationOutput) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *OperationOutput) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetUserId returns the UserId field value
func (o *OperationOutput) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *OperationOutput) SetUserId(v string) {
	o.UserId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *OperationOutput) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *OperationOutput) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationOutput) GetOperationType() OperationType {
	if o == nil || o.OperationType.Get() == nil {
		var ret OperationType
		return ret
	}
	return *o.OperationType.Get()
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationOutput) GetOperationTypeOk() (*OperationType, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperationType.Get(), o.OperationType.IsSet()
}

// HasOperationType returns a boolean if a field has been set.
func (o *OperationOutput) HasOperationType() bool {
	if o != nil && o.OperationType.IsSet() {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given NullableOperationType and assigns it to the OperationType field.
func (o *OperationOutput) SetOperationType(v OperationType) {
	o.OperationType.Set(&v)
}
// SetOperationTypeNil sets the value for OperationType to be an explicit nil
func (o *OperationOutput) SetOperationTypeNil() {
	o.OperationType.Set(nil)
}

// UnsetOperationType ensures that no value is present for OperationType, not even an explicit nil
func (o *OperationOutput) UnsetOperationType() {
	o.OperationType.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationOutput) GetStatus() OperationStatus {
	if o == nil || o.Status.Get() == nil {
		var ret OperationStatus
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationOutput) GetStatusOk() (*OperationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *OperationOutput) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableOperationStatus and assigns it to the Status field.
func (o *OperationOutput) SetStatus(v OperationStatus) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *OperationOutput) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *OperationOutput) UnsetStatus() {
	o.Status.Unset()
}

// GetAssetName returns the AssetName field value
func (o *OperationOutput) GetAssetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetAssetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetName, true
}

// SetAssetName sets field value
func (o *OperationOutput) SetAssetName(v string) {
	o.AssetName = v
}

// GetAssetId returns the AssetId field value
func (o *OperationOutput) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *OperationOutput) SetAssetId(v string) {
	o.AssetId = v
}

// GetAssetVersion returns the AssetVersion field value
func (o *OperationOutput) GetAssetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetVersion
}

// GetAssetVersionOk returns a tuple with the AssetVersion field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetAssetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetVersion, true
}

// SetAssetVersion sets field value
func (o *OperationOutput) SetAssetVersion(v string) {
	o.AssetVersion = v
}

// GetAssetParameters returns the AssetParameters field value if set, zero value otherwise.
func (o *OperationOutput) GetAssetParameters() map[string]interface{} {
	if o == nil || o.AssetParameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AssetParameters
}

// GetAssetParametersOk returns a tuple with the AssetParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetAssetParametersOk() (map[string]interface{}, bool) {
	if o == nil || o.AssetParameters == nil {
		return nil, false
	}
	return o.AssetParameters, true
}

// HasAssetParameters returns a boolean if a field has been set.
func (o *OperationOutput) HasAssetParameters() bool {
	if o != nil && o.AssetParameters != nil {
		return true
	}

	return false
}

// SetAssetParameters gets a reference to the given map[string]interface{} and assigns it to the AssetParameters field.
func (o *OperationOutput) SetAssetParameters(v map[string]interface{}) {
	o.AssetParameters = v
}

// GetId returns the Id field value
func (o *OperationOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OperationOutput) SetId(v string) {
	o.Id = v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *OperationOutput) GetExecutionId() string {
	if o == nil || o.ExecutionId == nil {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationOutput) GetExecutionIdOk() (*string, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *OperationOutput) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *OperationOutput) SetExecutionId(v string) {
	o.ExecutionId = &v
}

func (o OperationOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.OperationType.IsSet() {
		toSerialize["operation_type"] = o.OperationType.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if true {
		toSerialize["asset_name"] = o.AssetName
	}
	if true {
		toSerialize["asset_id"] = o.AssetId
	}
	if true {
		toSerialize["asset_version"] = o.AssetVersion
	}
	if o.AssetParameters != nil {
		toSerialize["asset_parameters"] = o.AssetParameters
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.ExecutionId != nil {
		toSerialize["execution_id"] = o.ExecutionId
	}
	return json.Marshal(toSerialize)
}

type NullableOperationOutput struct {
	value *OperationOutput
	isSet bool
}

func (v NullableOperationOutput) Get() *OperationOutput {
	return v.value
}

func (v *NullableOperationOutput) Set(val *OperationOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationOutput(val *OperationOutput) *NullableOperationOutput {
	return &NullableOperationOutput{value: val, isSet: true}
}

func (v NullableOperationOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


