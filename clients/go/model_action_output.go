/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// ActionOutput struct for ActionOutput
type ActionOutput struct {
	Id string `json:"id"`
	ActionName string `json:"action_name"`
	Asset AssetOutput `json:"asset"`
	Operation OperationOutput `json:"operation"`
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	Output map[string]interface{} `json:"output,omitempty"`
}

// NewActionOutput instantiates a new ActionOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionOutput(id string, actionName string, asset AssetOutput, operation OperationOutput) *ActionOutput {
	this := ActionOutput{}
	this.Id = id
	this.ActionName = actionName
	this.Asset = asset
	this.Operation = operation
	return &this
}

// NewActionOutputWithDefaults instantiates a new ActionOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionOutputWithDefaults() *ActionOutput {
	this := ActionOutput{}
	return &this
}

// GetId returns the Id field value
func (o *ActionOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActionOutput) SetId(v string) {
	o.Id = v
}

// GetActionName returns the ActionName field value
func (o *ActionOutput) GetActionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionName
}

// GetActionNameOk returns a tuple with the ActionName field value
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetActionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionName, true
}

// SetActionName sets field value
func (o *ActionOutput) SetActionName(v string) {
	o.ActionName = v
}

// GetAsset returns the Asset field value
func (o *ActionOutput) GetAsset() AssetOutput {
	if o == nil {
		var ret AssetOutput
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetAssetOk() (*AssetOutput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *ActionOutput) SetAsset(v AssetOutput) {
	o.Asset = v
}

// GetOperation returns the Operation field value
func (o *ActionOutput) GetOperation() OperationOutput {
	if o == nil {
		var ret OperationOutput
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetOperationOk() (*OperationOutput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *ActionOutput) SetOperation(v OperationOutput) {
	o.Operation = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ActionOutput) GetParameters() map[string]interface{} {
	if o == nil || o.Parameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ActionOutput) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *ActionOutput) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *ActionOutput) GetOutput() map[string]interface{} {
	if o == nil || o.Output == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOutput) GetOutputOk() (map[string]interface{}, bool) {
	if o == nil || o.Output == nil {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *ActionOutput) HasOutput() bool {
	if o != nil && o.Output != nil {
		return true
	}

	return false
}

// SetOutput gets a reference to the given map[string]interface{} and assigns it to the Output field.
func (o *ActionOutput) SetOutput(v map[string]interface{}) {
	o.Output = v
}

func (o ActionOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["action_name"] = o.ActionName
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Output != nil {
		toSerialize["output"] = o.Output
	}
	return json.Marshal(toSerialize)
}

type NullableActionOutput struct {
	value *ActionOutput
	isSet bool
}

func (v NullableActionOutput) Get() *ActionOutput {
	return v.value
}

func (v *NullableActionOutput) Set(val *ActionOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableActionOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableActionOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionOutput(val *ActionOutput) *NullableActionOutput {
	return &NullableActionOutput{value: val, isSet: true}
}

func (v NullableActionOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


