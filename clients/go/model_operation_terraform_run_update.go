/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// OperationTerraformRunUpdate struct for OperationTerraformRunUpdate
type OperationTerraformRunUpdate struct {
	TerraformStdout interface{} `json:"terraform_stdout,omitempty"`
	TerraformStderr interface{} `json:"terraform_stderr,omitempty"`
	TerraformReturnCode int32 `json:"terraform_return_code"`
	TerraformSuccess bool `json:"terraform_success"`
}

// NewOperationTerraformRunUpdate instantiates a new OperationTerraformRunUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationTerraformRunUpdate(terraformReturnCode int32, terraformSuccess bool) *OperationTerraformRunUpdate {
	this := OperationTerraformRunUpdate{}
	this.TerraformReturnCode = terraformReturnCode
	this.TerraformSuccess = terraformSuccess
	return &this
}

// NewOperationTerraformRunUpdateWithDefaults instantiates a new OperationTerraformRunUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationTerraformRunUpdateWithDefaults() *OperationTerraformRunUpdate {
	this := OperationTerraformRunUpdate{}
	return &this
}

// GetTerraformStdout returns the TerraformStdout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationTerraformRunUpdate) GetTerraformStdout() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TerraformStdout
}

// GetTerraformStdoutOk returns a tuple with the TerraformStdout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationTerraformRunUpdate) GetTerraformStdoutOk() (*interface{}, bool) {
	if o == nil || o.TerraformStdout == nil {
		return nil, false
	}
	return &o.TerraformStdout, true
}

// HasTerraformStdout returns a boolean if a field has been set.
func (o *OperationTerraformRunUpdate) HasTerraformStdout() bool {
	if o != nil && o.TerraformStdout != nil {
		return true
	}

	return false
}

// SetTerraformStdout gets a reference to the given interface{} and assigns it to the TerraformStdout field.
func (o *OperationTerraformRunUpdate) SetTerraformStdout(v interface{}) {
	o.TerraformStdout = v
}

// GetTerraformStderr returns the TerraformStderr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationTerraformRunUpdate) GetTerraformStderr() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TerraformStderr
}

// GetTerraformStderrOk returns a tuple with the TerraformStderr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationTerraformRunUpdate) GetTerraformStderrOk() (*interface{}, bool) {
	if o == nil || o.TerraformStderr == nil {
		return nil, false
	}
	return &o.TerraformStderr, true
}

// HasTerraformStderr returns a boolean if a field has been set.
func (o *OperationTerraformRunUpdate) HasTerraformStderr() bool {
	if o != nil && o.TerraformStderr != nil {
		return true
	}

	return false
}

// SetTerraformStderr gets a reference to the given interface{} and assigns it to the TerraformStderr field.
func (o *OperationTerraformRunUpdate) SetTerraformStderr(v interface{}) {
	o.TerraformStderr = v
}

// GetTerraformReturnCode returns the TerraformReturnCode field value
func (o *OperationTerraformRunUpdate) GetTerraformReturnCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TerraformReturnCode
}

// GetTerraformReturnCodeOk returns a tuple with the TerraformReturnCode field value
// and a boolean to check if the value has been set.
func (o *OperationTerraformRunUpdate) GetTerraformReturnCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerraformReturnCode, true
}

// SetTerraformReturnCode sets field value
func (o *OperationTerraformRunUpdate) SetTerraformReturnCode(v int32) {
	o.TerraformReturnCode = v
}

// GetTerraformSuccess returns the TerraformSuccess field value
func (o *OperationTerraformRunUpdate) GetTerraformSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TerraformSuccess
}

// GetTerraformSuccessOk returns a tuple with the TerraformSuccess field value
// and a boolean to check if the value has been set.
func (o *OperationTerraformRunUpdate) GetTerraformSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerraformSuccess, true
}

// SetTerraformSuccess sets field value
func (o *OperationTerraformRunUpdate) SetTerraformSuccess(v bool) {
	o.TerraformSuccess = v
}

func (o OperationTerraformRunUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TerraformStdout != nil {
		toSerialize["terraform_stdout"] = o.TerraformStdout
	}
	if o.TerraformStderr != nil {
		toSerialize["terraform_stderr"] = o.TerraformStderr
	}
	if true {
		toSerialize["terraform_return_code"] = o.TerraformReturnCode
	}
	if true {
		toSerialize["terraform_success"] = o.TerraformSuccess
	}
	return json.Marshal(toSerialize)
}

type NullableOperationTerraformRunUpdate struct {
	value *OperationTerraformRunUpdate
	isSet bool
}

func (v NullableOperationTerraformRunUpdate) Get() *OperationTerraformRunUpdate {
	return v.value
}

func (v *NullableOperationTerraformRunUpdate) Set(val *OperationTerraformRunUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationTerraformRunUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationTerraformRunUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationTerraformRunUpdate(val *OperationTerraformRunUpdate) *NullableOperationTerraformRunUpdate {
	return &NullableOperationTerraformRunUpdate{value: val, isSet: true}
}

func (v NullableOperationTerraformRunUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationTerraformRunUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


