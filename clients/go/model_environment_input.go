/*
Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_api_client

import (
	"encoding/json"
)

// EnvironmentInput struct for EnvironmentInput
type EnvironmentInput struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Data map[string]interface{} `json:"data"`
}

// NewEnvironmentInput instantiates a new EnvironmentInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentInput(name string, data map[string]interface{}) *EnvironmentInput {
	this := EnvironmentInput{}
	this.Name = name
	this.Data = data
	return &this
}

// NewEnvironmentInputWithDefaults instantiates a new EnvironmentInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentInputWithDefaults() *EnvironmentInput {
	this := EnvironmentInput{}
	return &this
}

// GetName returns the Name field value
func (o *EnvironmentInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EnvironmentInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EnvironmentInput) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnvironmentInput) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInput) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnvironmentInput) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnvironmentInput) SetDescription(v string) {
	o.Description = &v
}

// GetData returns the Data field value
func (o *EnvironmentInput) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *EnvironmentInput) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *EnvironmentInput) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o EnvironmentInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentInput struct {
	value *EnvironmentInput
	isSet bool
}

func (v NullableEnvironmentInput) Get() *EnvironmentInput {
	return v.value
}

func (v *NullableEnvironmentInput) Set(val *EnvironmentInput) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentInput) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentInput(val *EnvironmentInput) *NullableEnvironmentInput {
	return &NullableEnvironmentInput{value: val, isSet: true}
}

func (v NullableEnvironmentInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


